#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\begin_preamble
\usepackage{color}
\newcommand{\nicefrac}[2]{\ensuremath ^{#1}\!\!/\!_{#2}}
\usepackage { fancybox}

\renewcommand{\floatpagefraction}{0.95}
\renewcommand{\textfraction}{0}
\renewcommand{\topfraction}{1}
\renewcommand{\bottomfraction}{1}

\RequirePackage{tweaklist}
\renewcommand{\itemhook}
{
    \setlength{\topsep}{3pt}
    \setlength{\parskip}{0pt}
    \setlength{\parsep}{0pt}
    \setlength{\partopsep}{0pt}
    \setlength{\itemsep}{0pt}
    \setlength{\labelwidth}{10pt}
    \setlength{\leftmargin}{\labelwidth}
}

\renewcommand{\enumhook}
{
    \setlength{\topsep}{3pt}
    \setlength{\parskip}{0pt}
    \setlength{\parsep}{0pt}
    \setlength{\partopsep}{0pt}
    \setlength{\itemsep}{3pt}
    \setlength{\labelwidth}{10pt}
    \setlength{\leftmargin}{\labelwidth}
}

\renewcommand{\descriptionlabel}[1]{\parbox{\leftmargin}{\raggedleft #1.~}}
\end_preamble
\use_default_options false
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman times
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics pdftex
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref false
\papersize a4paper
\use_geometry true
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine natbib_authoryear
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 2cm
\topmargin 2cm
\rightmargin 2cm
\bottommargin 2cm
\secnumdepth 1
\tocdepth 1
\paragraph_separation indent
\paragraph_indentation 0bp
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle empty
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset Newpage cleardoublepage
\end_inset


\end_layout

\begin_layout Section
Practical: Linear Advection
\end_layout

\begin_layout Standard
You will be coding up various numerical methods in order to understand how
 they behave, which schemes are more accurate and what problems and limitations
 can occur.
 You will be writing code to solve the one-dimensional linear advection
 equation using either a uniform or non-uniform grid, depending on your
 confidence and experience.
 Some code has been written already and you can use this to get you started.
 Some of the code is available in printed form only.
 The rest is available in directory 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

practicals/linearAdvectCode
\end_layout

\end_inset

.
 (Evidence shows that copying out code is a good way to learn programming).
 The code is organised as follows:
\end_layout

\begin_layout Standard
\begin_inset Tabular
<lyxtabular version="3" rows="8" columns="2">
<features tabularvalignment="middle">
<column alignment="left" valignment="top" width="0pt">
<column alignment="left" valignment="top" width="0pt">
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

linearAdvectUni.py
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
The outer code for linear advection using a uniform grid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
to define variables, call advection functions and plot results
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

linearAdvectNonU.py
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Similar outer code but using a non-uniform grid
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

spaceTime.py
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Code for defining data structures 
\family typewriter
Space
\family default
 and 
\family typewriter
Time
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex URL
status open

\begin_layout Plain Layout

mySchemes.py
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="left" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
File containing various advection schemes for you to write.
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout

\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
Rename this file 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

yourName.py
\end_layout

\end_inset

 so that all files are unique
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

initialConditions.py
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
For defining various initial conditions, digital copy available
\end_layout

\end_inset
</cell>
</row>
<row>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

diagnostics.py
\end_layout

\end_inset


\end_layout

\end_inset
</cell>
<cell alignment="center" valignment="top" usebox="none">
\begin_inset Text

\begin_layout Plain Layout
For calculating error diagnostics, digital copy available
\end_layout

\end_inset
</cell>
</row>
</lyxtabular>

\end_inset


\end_layout

\begin_layout Standard

\series bold
You do not need to type out both the uniform and non-uniform grid code
\series default
.
 
\end_layout

\begin_layout Itemize
Choose a scheme to implement, FTBS, CTCS, BTBS etc or a scheme you have
 found online or one you have derived yourself.
 I have already implemented FTCS on a uniform and non-uniform grid to help
 you get started.
\end_layout

\begin_layout Itemize
Choose if you are going to implement your scheme on a uniform or non-uniform
 grid.
 
\end_layout

\begin_layout Itemize
Discuss your decisions with your colleagues so that a range of different
 schemes are implemented.
 This will enable you to share code and study the behaviour of different
 schemes.
 
\end_layout

\begin_layout Itemize
Implement your chosen scheme in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

yourName.py
\end_layout

\end_inset

 and run to compare with FTCS.
 
\end_layout

\begin_layout Itemize
Share code with your neighbours to study the behaviour of different schemes.
 
\end_layout

\begin_layout Standard
The codes should use periodic boundary conditions so that when material
 is advected out of the right hand side (at 
\begin_inset Formula $x=1$
\end_inset

), it appears at the left hand boundary (at 
\begin_inset Formula $x=0$
\end_inset

) and vice versa.
 This can be done by setting 
\begin_inset Formula $\phi_{N}=\phi_{0}$
\end_inset

 , 
\begin_inset Formula $\phi_{N+1}=\phi_{1}$
\end_inset

, 
\begin_inset Formula $\phi_{-1}=\phi_{N-1}$
\end_inset

.
 However, to simplify the code, this is done in python using modulo arithmetic
 to calculate array indices.
 See code for my implementation of FTCS in 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

mySchemes.py
\end_layout

\end_inset

.
\end_layout

\begin_layout Standard
You will have the opportunity to present the results of your work to the
 whole group.
 So in collaboration with your colleagues, make some figures and some slides
 which answer the following points concerning the behaviour of the schemes:
\end_layout

\begin_layout Enumerate
Which schemes have the lowest errors?
\end_layout

\begin_layout Enumerate
How do the errors vary with 
\begin_inset Formula $\Delta x$
\end_inset

?
\end_layout

\begin_layout Enumerate
How do the errors change if 
\begin_inset Formula $\Delta x$
\end_inset

 is non-uniform?
\end_layout

\begin_deeper
\begin_layout Enumerate
Does reducing 
\begin_inset Formula $\Delta x$
\end_inset

 in part of the domain improve accuracy?
\end_layout

\end_deeper
\begin_layout Enumerate
Which schemes(s) conserve the total quantity of 
\begin_inset Formula $\phi$
\end_inset

?
\end_layout

\begin_layout Enumerate
Which schemes(s) conserve the standard deviation of 
\begin_inset Formula $\phi$
\end_inset

?
\end_layout

\begin_layout Enumerate
Are there any stability limits associated with any of the schemes? (Are
 the schemes stable for 
\begin_inset Formula $c<0$
\end_inset

, 
\begin_inset Formula $c<1$
\end_inset

 or 
\begin_inset Formula $c>1$
\end_inset

?) (If a scheme is stable then it should be able to run for an arbitrarily
 long time without diverging.)
\end_layout

\begin_layout Enumerate
Do any of the schemes generate unbounded results (values 
\begin_inset Formula $<0$
\end_inset

 or 
\begin_inset Formula $>1$
\end_inset

)?
\end_layout

\begin_layout Subsection*
\begin_inset Newpage clearpage
\end_inset

Code for 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

spaceTime.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{practicals/linearAdvectCode/spaceTime.py}
\end_layout

\end_inset


\begin_inset Newpage clearpage
\end_inset


\end_layout

\begin_layout Subsection*
Code for 
\begin_inset Flex URL
status collapsed

\begin_layout Plain Layout

linearAdvectUni.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{practicals/linearAdvectCode/linearAdvectUni.py}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Newpage clearpage
\end_inset

Code for 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

mySchemes.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{practicals/linearAdvectCode/mySchemes.py}
\end_layout

\end_inset


\end_layout

\begin_layout Subsection*
\begin_inset Newpage clearpage
\end_inset

Code for 
\begin_inset Flex URL
status open

\begin_layout Plain Layout

linearAdvectNonU.py
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
lstinputlisting{practicals/linearAdvectCode/linearAdvectNonU.py}
\end_layout

\end_inset


\end_layout

\end_body
\end_document
